import React from "react";
import {
  Container,
  Typography,
  Box,
  List,
  ListItem,
  ListItemText,
  Table,
  TableBody,
  TableRow,
  TableCell,
  TableHead,
  Paper,
  TableContainer,
} from "@mui/material";

export const ThemeContext = React.createContext({
  theme: "light",
  toggleTheme: () => {},
});

export default function ReactContextGuide() {
  return (
    <Container maxWidth="md" sx={{ py: 4 }}>
      <Box textAlign="center" mb={3}>
        <Typography variant="h4" component="h1" fontWeight="bold">
          üåê React Context API
        </Typography>
        <Typography variant="subtitle1" color="textSecondary">
          –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        </Typography>
      </Box>

      <Box className="section" mt={4}>
        <Typography variant="h6" gutterBottom fontWeight="bold">
          –ß—Ç–æ —Ç–∞–∫–æ–µ Context?
        </Typography>
        <Typography paragraph>
          <strong>Context</strong> ‚Äî —ç—Ç–æ –º–µ—Ö–∞–Ω–∏–∑–º –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑
          –¥–µ—Ä–µ–≤–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±–µ–∑ —è–≤–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –ø—Ä–æ–ø—Å–æ–≤. –û–Ω —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É{" "}
          <strong>–ø—Ä–æ–ø—Å-–¥—Ä–∏–ª–ª–∏–Ω–≥–∞</strong> –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–µ–≥–∫–æ –¥–µ–ª–∏—Ç—å—Å—è –¥–∞–Ω–Ω—ã–º–∏
          –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏.
        </Typography>
      </Box>

      <Box className="create-context" mt={4}>
        <Typography variant="h6" gutterBottom fontWeight="bold">
          –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        </Typography>
        <Box
          component="pre"
          sx={{
            backgroundColor: "#272822",
            color: "#f8f8f2",
            padding: 2,
            borderRadius: 2,
            overflowX: "auto",
          }}
        >
          <code>{`
// ThemeContext.js
import { createContext } from 'react';

export const ThemeContext = createContext({
  theme: 'light',
  toggleTheme: () => {},
});
          `}</code>
        </Box>
      </Box>

      <Box className="provider-consumer" mt={4}>
        <Typography variant="h6" gutterBottom fontWeight="bold">
          –ü–æ—Å—Ç–∞–≤—â–∏–∫ –∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å
        </Typography>

        <Box mb={3}>
          <Typography fontWeight="medium">–ü–æ—Å—Ç–∞–≤—â–∏–∫ (Provider):</Typography>
          <Box
            component="pre"
            sx={{
              backgroundColor: "#272822",
              color: "#f8f8f2",
              padding: 2,
              borderRadius: 2,
              overflowX: "auto",
            }}
          >
            <code>{`
function App() {
  const [theme, setTheme] = useState('light');
  
  const toggleTheme = () => {
    setTheme(prev => prev === 'light' ? 'dark' : 'light');
  };

  const value = useMemo(() => ({ theme, toggleTheme }), [theme]);

  return (
    <ThemeContext.Provider value={value}>
      <Header />
      <MainContent />
    </ThemeContext.Provider>
  );
}
          `}</code>
          </Box>
        </Box>

        <Box mb={3}>
          <Typography fontWeight="medium">–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å (useContext):</Typography>
          <Box
            component="pre"
            sx={{
              backgroundColor: "#272822",
              color: "#f8f8f2",
              padding: 2,
              borderRadius: 2,
              overflowX: "auto",
            }}
          >
            <code>{`
function ThemeButton() {
  const { theme, toggleTheme } = useContext(ThemeContext);
  
  return (
    <button onClick={toggleTheme} className={\`theme-btn \${theme}\`}>
      –¢–µ–∫—É—â–∞—è —Ç–µ–º–∞: {theme}
    </button>
  );
}
          `}</code>
          </Box>
        </Box>
      </Box>

      <Box className="optimization-section" mt={4}>
        <Typography variant="h6" gutterBottom fontWeight="bold">
          üõ† –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å –ø–æ–º–æ—â—å—é useMemo
        </Typography>
        <Typography paragraph>
          –ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ª–∏—à–Ω–∏—Ö —Ä–µ—Ä–µ–Ω–¥–µ—Ä–æ–≤, –æ–±–æ—Ä–∞—á–∏–≤–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç—ã –≤{" "}
          <code>useMemo()</code>.
        </Typography>

        <Box
          component="pre"
          sx={{
            backgroundColor: "#272822",
            color: "#f8f8f2",
            padding: 2,
            borderRadius: 2,
            overflowX: "auto",
          }}
        >
          <code>{`
// –ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ª–∏—à–Ω–∏—Ö —Ä–µ—Ä–µ–Ω–¥–µ—Ä–æ–≤
<ThemeContext.Provider 
  value={useMemo(() => ({ theme, toggleTheme }), [theme])}
>
          `}</code>
        </Box>
      </Box>

      <Box className="use-cases" mt={4}>
        <Typography variant="h6" gutterBottom fontWeight="bold">
          üìã –¢–∏–ø–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
        </Typography>
        <List>
          <ListItem disableGutters>
            <ListItemText primary="üîπ –¢–µ–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è (light/dark)" />
          </ListItem>
          <ListItem disableGutters>
            <ListItemText primary="üîπ –î–∞–Ω–Ω—ã–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (user, token)" />
          </ListItem>
          <ListItem disableGutters>
            <ListItemText primary="üîπ –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è (—è–∑—ã–∫–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)" />
          </ListItem>
          <ListItem disableGutters>
            <ListItemText primary="üîπ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞)" />
          </ListItem>
          <ListItem disableGutters>
            <ListItemText primary="üîπ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, userPreferences)" />
          </ListItem>
        </List>
      </Box>

      <Box className="custom-hook" mt={4}>
        <Typography variant="h6" gutterBottom fontWeight="bold">
          üîß –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ö—É–∫ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        </Typography>
        <Box
          component="pre"
          sx={{
            backgroundColor: "#272822",
            color: "#f8f8f2",
            padding: 2,
            borderRadius: 2,
            overflowX: "auto",
          }}
        >
          <code>{`
export const useTheme = () => {
  const context = useContext(ThemeContext);
  if (!context) {
    throw new Error('useTheme –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ ThemeProvider');
  }
  return context;
};
          `}</code>
        </Box>
      </Box>

      <Box className="comparison-table" mt={4}>
        <Typography variant="h6" gutterBottom fontWeight="bold">
          üìä Context API vs Redux
        </Typography>
        <TableContainer
          component={Paper}
          sx={{ boxShadow: 1, borderRadius: 2 }}
        >
          <Table>
            <TableHead>
              <TableRow>
                <TableCell>
                  <strong>Context API</strong>
                </TableCell>
                <TableCell>
                  <strong>Redux</strong>
                </TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              <TableRow>
                <TableCell>–í—Å—Ç—Ä–æ–µ–Ω –≤ React</TableCell>
                <TableCell>–°—Ç–æ—Ä–æ–Ω–Ω—è—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞</TableCell>
              </TableRow>
              <TableRow>
                <TableCell>–ü—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞</TableCell>
                <TableCell>–°–ª–æ–∂–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è</TableCell>
              </TableRow>
              <TableRow>
                <TableCell>–õ—É—á—à–µ –¥–ª—è —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</TableCell>
                <TableCell>–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è —á–∞—Å—Ç—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π</TableCell>
              </TableRow>
            </TableBody>
          </Table>
        </TableContainer>
      </Box>

      <Box className="best-practices" mt={4}>
        <Typography variant="h6" gutterBottom fontWeight="bold">
          üöÄ –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç—ã —Å Context
        </Typography>
        <List>
          <ListItem disableGutters>
            <ListItemText primary="üîπ –†–∞–∑–¥–µ–ª—è–π—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É (–Ω–µ –æ–¥–∏–Ω –Ω–∞ –≤—Å—ë –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)" />
          </ListItem>
          <ListItem disableGutters>
            <ListItemText primary="üîπ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ö—É–∫–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É" />
          </ListItem>
          <ListItem disableGutters>
            <ListItemText primary="üîπ –ú–µ–º–æ–∏–∑–∏—Ä—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ —á–µ—Ä–µ–∑ useMemo()" />
          </ListItem>
          <ListItem disableGutters>
            <ListItemText primary="üîπ –ò–∑–±–µ–≥–∞–π—Ç–µ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤" />
          </ListItem>
          <ListItem disableGutters>
            <ListItemText primary="üîπ –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è –≤—ã—Å–æ–∫–æ—á–∞—Å—Ç–æ—Ç–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π" />
          </ListItem>
        </List>
      </Box>

      <Box
        className="conclusion"
        mt={4}
        p={3}
        bgcolor="#e0f7fa"
        borderRadius={2}
      >
        <Typography>
          –ò–∑—É—á–∏—Ç–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Ä–∞–±–æ—Ç—ã —Å Context –≤{" "}
          <a
            href="https://react.dev/reference/react/useContext "
            target="_blank"
            rel="noopener noreferrer"
            style={{ color: "#1976d2", textDecoration: "none" }}
          >
            –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
          </a>
          . –ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—å —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö!
        </Typography>
      </Box>
    </Container>
  );
}
